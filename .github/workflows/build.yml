name: Build

on:
  pull_request:
    branches: main
    paths:
      - go.*
      - main.go
  push:
    branches: main
    tags:
      - v[0-9]+.[0-9]+.[0-9]+
  workflow_dispatch:

permissions:
  contents: write

env:
  BINARY_NAME: summon-secrets-manager
  BWS_ACCESS_TOKEN: ${{ secrets.BWS_ACCESS_TOKEN }}
  CC: musl-gcc
  CGO_ENABLED: 1

jobs:
  build:
    runs-on:
      - ubuntu-22.04
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Install musl
      run: |
        sudo apt update
        sudo apt -y install musl-tools

        # Install cross-compilation toolchain with musl libc
        BINS=('x86_64-w64-mingw32')

        mkdir -p $XTOOLS

        for BINARY in "${BINS[@]}"; do
          wget -nv -O - https://github.com/musl-cross/musl-cross/releases/download/${VERSION}/${BINARY}.tar.xz | tar -Jxf - -C $XTOOLS
          echo "/opt/x-tools/${BINARY}/bin" >>$GITHUB_PATH
        done
      env:
        VERSION: 20250206
        XTOOLS: /opt/x-tools

    - name: Setup Go
      uses: actions/setup-go@v5
      with:
        go-version-file: go.mod

    - name: Test
      run: |
        go test -v

    - name: Build
      run: |
        ARCH=('amd64')
        OS=('linux' 'windows')

        for GOARCH in "${ARCH[@]}"; do
          for GOOS in "${OS[@]}"; do
            export GOARCH
            export GOOS

            ARTIFACT_NAME="${BINARY_NAME}-${GOOS}-${GOARCH}"
            if [[ "$GOOS" == "windows" ]]; then
              ARTIFACT_NAME="${ARTIFACT_NAME}.exe"
              export CC=x86_64-w64-mingw32-cc
            fi

            # Build
            echo "- building artifact: $ARTIFACT_NAME"
            go build -ldflags '-linkmode external -extldflags "-static -Wl,-unresolved-symbols=ignore-all"' -o $ARTIFACT_NAME
            strip $ARTIFACT_NAME

            # Release
            if [[ "$GITHUB_REF_TYPE" == "tag" ]]; then
              echo "- uploading artifact: $ARTIFACT_NAME"
              gh release upload $GITHUB_REF_NAME $ARTIFACT_NAME --clobber
            fi
          done
        done
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
